# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import pinned_messages_pb2 as pinned__messages__pb2


class PinnedMessagesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPinnedMessages = channel.unary_unary(
                '/dialog.PinnedMessages/GetPinnedMessages',
                request_serializer=pinned__messages__pb2.GetPinnedMessagesRequest.SerializeToString,
                response_deserializer=pinned__messages__pb2.GetPinnedMessagesResponse.FromString,
                )
        self.PinMessage = channel.unary_unary(
                '/dialog.PinnedMessages/PinMessage',
                request_serializer=pinned__messages__pb2.RequestPinMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UnpinMessage = channel.unary_unary(
                '/dialog.PinnedMessages/UnpinMessage',
                request_serializer=pinned__messages__pb2.RequestUnpinMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class PinnedMessagesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPinnedMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PinMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnpinMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PinnedMessagesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPinnedMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPinnedMessages,
                    request_deserializer=pinned__messages__pb2.GetPinnedMessagesRequest.FromString,
                    response_serializer=pinned__messages__pb2.GetPinnedMessagesResponse.SerializeToString,
            ),
            'PinMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PinMessage,
                    request_deserializer=pinned__messages__pb2.RequestPinMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UnpinMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UnpinMessage,
                    request_deserializer=pinned__messages__pb2.RequestUnpinMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dialog.PinnedMessages', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PinnedMessages(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPinnedMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.PinnedMessages/GetPinnedMessages',
            pinned__messages__pb2.GetPinnedMessagesRequest.SerializeToString,
            pinned__messages__pb2.GetPinnedMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PinMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.PinnedMessages/PinMessage',
            pinned__messages__pb2.RequestPinMessage.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnpinMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.PinnedMessages/UnpinMessage',
            pinned__messages__pb2.RequestUnpinMessage.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
