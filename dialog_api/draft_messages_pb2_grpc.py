# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import draft_messages_pb2 as draft__messages__pb2
from . import miscellaneous_pb2 as miscellaneous__pb2


class DraftMessagesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SaveDraftMessage = channel.unary_unary(
                '/dialog.DraftMessages/SaveDraftMessage',
                request_serializer=draft__messages__pb2.RequestSaveDraftMessage.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.DeleteDraftMessage = channel.unary_unary(
                '/dialog.DraftMessages/DeleteDraftMessage',
                request_serializer=draft__messages__pb2.RequestDeleteDraftMessage.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.LoadDraftMessages = channel.unary_unary(
                '/dialog.DraftMessages/LoadDraftMessages',
                request_serializer=draft__messages__pb2.RequestLoadDraftMessages.SerializeToString,
                response_deserializer=draft__messages__pb2.ResponseLoadDraftMessages.FromString,
                )


class DraftMessagesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SaveDraftMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDraftMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadDraftMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DraftMessagesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SaveDraftMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveDraftMessage,
                    request_deserializer=draft__messages__pb2.RequestSaveDraftMessage.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'DeleteDraftMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDraftMessage,
                    request_deserializer=draft__messages__pb2.RequestDeleteDraftMessage.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'LoadDraftMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadDraftMessages,
                    request_deserializer=draft__messages__pb2.RequestLoadDraftMessages.FromString,
                    response_serializer=draft__messages__pb2.ResponseLoadDraftMessages.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dialog.DraftMessages', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DraftMessages(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SaveDraftMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.DraftMessages/SaveDraftMessage',
            draft__messages__pb2.RequestSaveDraftMessage.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDraftMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.DraftMessages/DeleteDraftMessage',
            draft__messages__pb2.RequestDeleteDraftMessage.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadDraftMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.DraftMessages/LoadDraftMessages',
            draft__messages__pb2.RequestLoadDraftMessages.SerializeToString,
            draft__messages__pb2.ResponseLoadDraftMessages.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
